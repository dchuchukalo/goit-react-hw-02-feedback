{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","props","Object","keys","map","option","className","styles","statItem","key","FeedbackOptions","this","options","onLeaveFeedback","feedbackBtn","type","onClick","Component","Section","title","children","ptopTypes","PropTypes","string","isRequired","Notification","message","App","state","good","neutral","bad","setState","prevState","countTotalFeedback","reduce","totalFeedback","countPositiveFeedbackPercentage","resultPercentage","Math","round","arrOptions","total","positivePercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,MAAQ,yB,uLCyCXC,EAtCI,SAAAC,GAAK,OACtB,oCACGC,OAAOC,KAAKF,GAAOG,KAAI,SAAAC,GACtB,OACE,uBAAGC,UAAWC,IAAOC,SAAUC,IAAKJ,GACtB,uBAAXA,EAAkC,oBAAsBA,EAD3D,IACoE,IACjEJ,EAAMI,S,gBCuBFK,E,uKA5BH,IAAD,EAC8BC,KAAKV,MAAlCW,EADD,EACCA,QAASC,EADV,EACUA,gBACjB,OACE,oCACGD,EAAQR,KAAI,SAAAC,GACX,OACE,4BACEC,UAAWC,IAAOO,YAClBC,KAAK,SACLN,IAAKJ,EACLW,QAAS,WACPH,EAAgBR,KAGjBA,W,GAfeY,a,yBCAxBC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,wBAAId,UAAWC,IAAOY,OAAQA,GAC7BC,IAILF,EAAQG,UAAY,CAClBF,M,OAAOG,EAAUC,OAAOC,YAGXN,QCNAO,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,IC8D3BC,E,4MA1DbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPlB,gBAAkB,SAAAR,GAChB,EAAK2B,UAAS,SAAAC,GAAS,sBACpB5B,EAAS4B,EAAU5B,GAAU,O,EAIlC6B,mBAAqB,WACnB,OAAOhC,OAAOC,KAAK,EAAKyB,OAAOO,QAC7B,SAACC,EAAe/B,GAAhB,OAA2B+B,EAAgB,EAAKR,MAAMvB,KACtD,I,EAIJgC,gCAAkC,WAChC,IAAMC,EAC0B,IAA9B,EAAKJ,qBACD,EACAK,KAAKC,MAAO,IAAM,EAAKN,qBAAwB,EAAKN,MAAMC,MAEhE,MAAM,GAAN,OAAUS,EAAV,M,uDAGQ,IAAD,EACwB3B,KAAKiB,MAA5BC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBU,EAAavC,OAAOC,KAAKQ,KAAKiB,OAEpC,OACE,oCACE,kBAAC,EAAD,CAAST,MAAM,8BACb,kBAAC,EAAD,CACEP,QAAS6B,EACT5B,gBAAiBF,KAAKE,mBAG1B,kBAAC,EAAD,CAASM,MAAM,cACkB,IAA9BR,KAAKuB,qBACJ,kBAAC,EAAD,CAAcR,QAAQ,sBAEtB,kBAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLW,MAAO/B,KAAKuB,qBACZS,mBAAoBhC,KAAK0B,0C,GAlDrBpB,a,YCAlB2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCT1BlD,EAAOC,QAAU,CAAC,SAAW,+B,kBCA7BD,EAAOC,QAAU,CAAC,YAAc,wC","file":"static/js/main.a16d198c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1_02D\"};","import React from 'react';\nimport styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = props => (\n  <>\n    {Object.keys(props).map(option => {\n      return (\n        <p className={styles.statItem} key={option}>\n          {option === 'positivePercentage' ? 'positive feedback' : option}:{' '}\n          {props[option]}\n        </p>\n      );\n    })}\n  </>\n);\n\n// class Statistics extends Component {\n//   render() {\n//     return (\n//       <>\n//         {Object.keys(this.props).map(option => {\n//           return (\n//             <p key={option}>\n//               {option === 'positivePercentage' ? 'positive feedback' : option}:{' '}\n//               {this.props[option]}\n//             </p>\n//           );\n//         })}\n//       </>\n//     );\n//   }\n// }\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport styles from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    return (\n      <>\n        {options.map(option => {\n          return (\n            <button\n              className={styles.feedbackBtn}\n              type=\"button\"\n              key={option}\n              onClick={() => {\n                onLeaveFeedback(option);\n              }}\n            >\n              {option}\n            </button>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.ptopTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.keys(this.state).reduce(\n      (totalFeedback, option) => totalFeedback + this.state[option],\n      0,\n    );\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const resultPercentage =\n      this.countTotalFeedback() === 0\n        ? 0\n        : Math.round((100 / this.countTotalFeedback()) * this.state.good);\n\n    return `${resultPercentage}%`;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const arrOptions = Object.keys(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={arrOptions}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statItem\":\"Statistics_statItem__s9A-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__5LBJN\"};"],"sourceRoot":""}